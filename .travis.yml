dist: xenial
language: python
python:
- '3.6'
- '3.7'
stages:
- lint
- test
- deploy
env:
  matrix:
  - DJANGO_VERSION=2.1 REST_VERSION=3.10
  - DJANGO_VERSION=2.2 REST_VERSION=3.10
  - DJANGO_VERSION=dev REST_VERSION=3.10
  - DJANGO_VERSION=2.1 REST_VERSION=dev
  - DJANGO_VERSION=2.2 REST_VERSION=dev
  - DJANGO_VERSION=dev REST_VERSION=dev
matrix:
  exclude:
  - python: 3.6
    env: DJANGO_VERSION=2.1 REST_VERSION=3.10
  - python: 3.6
    env: DJANGO_VERSION=2.2 REST_VERSION=3.10
  - python: 3.6
    env: DJANGO_VERSION=dev REST_VERSION=3.10
  - python: 3.7
    env: DJANGO_VERSION=2.1 REST_VERSION=3.10
  - python: 3.7
    env: DJANGO_VERSION=2.2 REST_VERSION=3.10
  - python: 3.7
    env: DJANGO_VERSION=dev REST_VERSION=3.10
  - python: 3.6
    env: DJANGO_VERSION=2.1 REST_VERSION=dev
  - python: 3.6
    env: DJANGO_VERSION=2.2 REST_VERSION=dev
  - python: 3.6
    env: DJANGO_VERSION=dev REST_VERSION=dev
  - python: 3.7
    env: DJANGO_VERSION=2.1 REST_VERSION=dev
  - python: 3.7
    env: DJANGO_VERSION=2.2 REST_VERSION=dev
  - python: 3.7
    env: DJANGO_VERSION=dev REST_VERSION=dev
install:
- pip install -r dev-requirements.txt
- python setup.py install
- if [[ $DJANGO_VERSION == dev ]]; then pip install -e git+https://github.com/django/django@master#egg=django;
  else pip install -q Django==$DJANGO_VERSION; fi
- if [[ $REST_VERSION == dev ]]; then pip install -e git+https://github.com/encode/django-rest-framework.git@master#egg=django-rest-framework;
  else pip install -q djangorestframework==$REST_VERSION; fi
script:
- coverage run runtests.py
- codecov
jobs:
  include:
  - stage: lint
    env:
    - DJANGO_VERSION=none
    install:
    - pip3 install flake8
    script:
    - flake8 template_engines
  - stage: deploy
    env:
    - DJANGO_VERSION=none
    install: skip
    before_script: skip
    script: skip
    deploy:
      stage: deploy
      provider: pypi
      user: "$PYPI_USER"
      password:
    secure: kzI9I5PR+KFmVIq6QXFJVv3VpEMZcF7qQth1yJE4cN/OhUZv6re1YQWjZP7TOYLl5r6wU8VKE5+V8SjTpppb02gsYjk7+Y8OdLnuKeac06hqty5sOSEbfnLdGqqgNAobQFw3xBGzGirsqikZJxtusrQ/n302Z2tVV/V++BiLtiHnz/2+nu8nbrtnKmQUWnrX1rihUDroFZiOIa+oBg/9oOT8VZ1DhGNkP8P1J8rX9KiJ6zKOTkWYrZMY7hemBPA7328TXSNPBbhTDTg7wR1TOlJlOkZ6q+a2PCFAWFnexLZ7d6xRNSrbb7n5Z9uBb01gYgBhv6Asg8mI2W22vgYPkiBOUOY2vdSkQSAeIUWWg07HdHR5imhFgxxmM9PhaaeA8zUdLj2ms0hV1/tYDc/TO9DZUUbaUBUYdCRPGWUi5eR1SO52St1TzooIsOwd0TMTnjkWrgYB7YwIFh7UvJjYl/A+n1cztMKUV6kPI89/uLjFuPfE95+UxZDwG+MATk6hteiIDJ0b+bcJpn6AcZUMDnLlRS7HNC4FIAsbRUxyCMaLoNYZu6pN9JbPRjV14zgWrD155Fyc/Y6smCr8MVjnb2r3H/ODSz0jsZKJmqqL+y1a5/3U3k2P9EESdczPV+aLXn6Hxmsl5YvhLbE70LW/du5IyChKjA/S7cjMJiRRAeU= 
      on:
        tags: true
